<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace 是确定该方法是在哪个dao接口-->
<!-- id是指的是哪个方法 -->
<!-- 这两个就组成了某个dao接口中的某个固定方法-->
<mapper namespace="com.itheima.dao.IUserDao">
    <resultMap id="userMap" type="com.itheima.domain.User">
        <!-- 主键字段的对应 -->
        <id property="userId" column="id"></id>
        <!-- 非主键字段的对应 -->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>

    </resultMap>
    <select id="findAll" resultMap="userMap">-- 这种开发效率高
<!--    <select id="findAll" resultType="com.itheima.domain.User"> 这种运行效率高-->
        select * from user
    </select>
<!--    保存用户 -->
    <insert id="saveUser" parameterType="com.itheima.domain.User">
    <!-- 配置插入操作后，获取插入数据的id -->
        <selectKey keyProperty="userId" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday)values(#{userName},#{userAddress},#{userSex},#{userBirthday});
    </insert>
<!--    更新用户-->
    <update id="updateUser" parameterType="com.itheima.domain.User">
        update user set username=#{userName},address=#{userAddress},sex=#{userSex},birthday=#{userBirthday} where id=#{userId};
    </update>
<!--    删除用户-->
    <delete id="deleteUser" parameterType="Integer">
        delete from user where id=#{id};
    </delete>
<!--    根据id查询用户-->
    <select id="findById" parameterType="Integer" resultMap="userMap">
        select * from user where id = #{id};
    </select>
<!--    根据名称模糊查询-->
    <select id="findByName" parameterType="string" resultMap="userMap">
        select * from user where username like #{username};
    </select>

    <!-- 根据queryVo的条件查询用户信息 -->
    <select id="findUserByVo" parameterType="com.itheima.domain.QueryVo" resultMap="userMap">
        select * from user where username like #{user.userName}
    </select>
</mapper>